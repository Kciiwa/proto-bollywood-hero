import React, { useState } from "react";
import {
  View,
  Text,
  TextInput,
  Button,
  StyleSheet,
  ScrollView,
  ImageBackground,
} from "react-native";
import { Picker } from "@react-native-picker/picker";

const UserFormScreen = () => {
  const [name, setName] = useState("");
  const [birthdate, setBirthdate] = useState("");
  const [gender, setGender] = useState("–ú");
  const [height, setHeight] = useState("");
  const [weight, setWeight] = useState("");
  const [city, setCity] = useState("");
  const [description, setDescription] = useState("");

  const handleSubmit = () => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –≤ API
    console.log({
      name,
      birthdate,
      gender,
      height,
      weight,
      city,
      description,
    });
  };

  return (
    <ImageBackground
      source={require("./assets/i.webp")}
      style={styles.container}
    >
      <ScrollView style={styles.scrollContainer}>
        <View style={styles.form}>
          <Text style={styles.title}>üåü –ë–æ–ª–ª–∏–≤—É–¥—Å–∫–∞—è –ü–µ—Å–Ω—è –û –¢–µ–±–µ! üåü</Text>

          {/* –ò–º—è */}
          <Text style={styles.label}>–ò–º—è</Text>
          <TextInput
            style={styles.input}
            value={name}
            onChangeText={setName}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
            placeholderTextColor="#8B0000"
          />

          {/* –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è */}
          <Text style={styles.label}>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</Text>
          <TextInput
            style={styles.input}
            value={birthdate}
            onChangeText={setBirthdate}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è"
            placeholderTextColor="#8B0000"
            keyboardType="numeric"
          />

          {/* –ü–æ–ª */}
          <Text style={styles.label}>–ü–æ–ª</Text>
          <Picker
            selectedValue={gender}
            style={styles.picker}
            onValueChange={(itemValue) => setGender(itemValue)}
          >
            <Picker.Item label="–ú—É–∂—Å–∫–æ–π" value="–ú" />
            <Picker.Item label="–ñ–µ–Ω—Å–∫–∏–π" value="–ñ" />
            <Picker.Item label="–î—Ä—É–≥–æ–µ" value="–¥—Ä—É–≥–æ–µ" />
          </Picker>

          {/* –†–æ—Å—Ç */}
          <Text style={styles.label}>–†–æ—Å—Ç (–≤ —Å–º)</Text>
          <TextInput
            style={styles.input}
            value={height}
            onChangeText={setHeight}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç"
            placeholderTextColor="#8B0000"
            keyboardType="numeric"
          />

          {/* –í–µ—Å */}
          <Text style={styles.label}>–í–µ—Å (–≤ –∫–≥)</Text>
          <TextInput
            style={styles.input}
            value={weight}
            onChangeText={setWeight}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å"
            placeholderTextColor="#8B0000"
            keyboardType="numeric"
          />

          {/* –ì–æ—Ä–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è */}
          <Text style={styles.label}>–ì–æ—Ä–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è</Text>
          <TextInput
            style={styles.input}
            value={city}
            onChangeText={setCity}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è"
            placeholderTextColor="#8B0000"
          />

          {/* –û–ø–∏—Å–∞–Ω–∏–µ —Å–µ–±—è */}
          <Text style={styles.label}>–û–ø–∏—à–∏—Ç–µ —Å–µ–±—è</Text>
          <TextInput
            style={[styles.input, styles.textArea]}
            value={description}
            onChangeText={setDescription}
            placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –ø–∞—Ä—É —Å–ª–æ–≤ –æ —Å–µ–±–µ"
            placeholderTextColor="#8B0000"
            multiline
          />

          {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
          <Button
            title="–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Å–Ω—é"
            onPress={handleSubmit}
            color="#FFD700"
          />
        </View>
      </ScrollView>
    </ImageBackground>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
  },
  scrollContainer: {
    flex: 1,
    backgroundColor: "rgba(255, 255, 255, 0.8)", // –ª–µ–≥–∫–∏–π —Ñ–æ–Ω, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –±—ã–ª –≤–∏–¥–µ–Ω
    borderRadius: 20,
  },
  form: {
    marginTop: 30,
    padding: 20,
  },
  title: {
    fontSize: 28,
    fontWeight: "bold",
    textAlign: "center",
    color: "#FFD700",
    marginBottom: 20,
    fontFamily: "Indie Flower", // –ò–Ω–¥–∏–π—Å–∫–∏–π —Å—Ç–∏–ª—å —à—Ä–∏—Ñ—Ç–∞ (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞)
  },
  label: {
    fontSize: 16,
    fontWeight: "600",
    color: "#8B0000", // –ö—Ä–∞—Å–Ω—ã–π, –∫–∞–∫ –≤ –∏–Ω–¥–∏–π—Å–∫–∏—Ö —É–∑–æ—Ä–∞—Ö
    marginBottom: 5,
  },
  input: {
    height: 45,
    borderColor: "#FFD700",
    borderWidth: 2,
    borderRadius: 10,
    marginBottom: 15,
    paddingLeft: 10,
    backgroundColor: "white",
    fontSize: 16,
    color: "#333",
    fontFamily: "Indie Flower",
  },
  picker: {
    height: 50,
    borderWidth: 2,
    borderRadius: 10,
    marginBottom: 15,
    borderColor: "#FFD700",
    backgroundColor: "white",
  },
  textArea: {
    height: 100,
    textAlignVertical: "top",
  },
});

export default UserFormScreen;
