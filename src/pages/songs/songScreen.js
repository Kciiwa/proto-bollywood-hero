import React, { useEffect, useState } from "react";
import { View, Text, StyleSheet, Button } from "react-native";
import { Audio } from "expo-av";
import PropTypes from "prop-types";

const SongScreen = ({ route }) => {
  const { userData } = route.params;
  const [sound, setSound] = useState();
  const [isPlaying, setIsPlaying] = useState(false);

  async function playSound() {
    const { sound } = await Audio.Sound.createAsync(
      // eslint-disable-next-line no-undef
      require("../../assets/audio/üéµ Title_ ‚ÄúRahul the Rising Star‚Äù.mp3")
    );
    setSound(sound);
    setIsPlaying(true);
    await sound.playAsync();
  }

  async function stopSound() {
    if (sound) {
      await sound.stopAsync();
      setIsPlaying(false);
    }
  }

  useEffect(() => {
    return sound
      ? () => {
          sound.unloadAsync(); // üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
        }
      : undefined;
  }, [sound]);

  return (
    <View style={styles.container}>
      <Text style={styles.title}>üéµ –í–∞—à–∞ –ø–µ—Å–Ω—è –ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–∞!</Text>
      <Text style={styles.text}>–í–æ—Ç –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –ø–æ–ª—É—á–∏–ª–∏:</Text>
      <Text style={styles.text}>–ò–º—è: {userData.name}</Text>
      <Text style={styles.text}>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {userData.birthdate}</Text>
      <Text style={styles.text}>–ü–æ–ª: {userData.gender}</Text>
      <Text style={styles.text}>–†–æ—Å—Ç: {userData.height} —Å–º</Text>
      <Text style={styles.text}>–í–µ—Å: {userData.weight} –∫–≥</Text>
      <Text style={styles.text}>–ì–æ—Ä–æ–¥: {userData.city}</Text>
      <Text style={styles.text}>–û–ø–∏—Å–∞–Ω–∏–µ: {userData.description}</Text>
      <Text style={styles.text}>üé∂ –ü–æ—Å–ª—É—à–∞–π—Ç–µ —Å–≤–æ—é –ø–µ—Å–Ω—é –Ω–∏–∂–µ:</Text>

      <View style={styles.audioControls}>
        {!isPlaying ? (
          <Button title="‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø–µ—Å–Ω—é" onPress={playSound} />
        ) : (
          <Button title="‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" onPress={stopSound} />
        )}
      </View>
    </View>
  );
};

// –î–æ–±–∞–≤–ª—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –ø—Ä–æ–ø—Å–æ–≤
SongScreen.propTypes = {
  route: PropTypes.shape({
    params: PropTypes.shape({
      userData: PropTypes.shape({
        name: PropTypes.string.isRequired,
        birthdate: PropTypes.string.isRequired,
        gender: PropTypes.string.isRequired,
        height: PropTypes.number.isRequired,
        weight: PropTypes.number.isRequired,
        city: PropTypes.string.isRequired,
        description: PropTypes.string.isRequired,
      }).isRequired,
    }).isRequired,
  }).isRequired,
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    justifyContent: "center",
    backgroundColor: "#fff",
  },
  title: {
    fontSize: 24,
    fontWeight: "bold",
    color: "#e91e63",
    marginBottom: 20,
  },
  text: {
    fontSize: 18,
    marginBottom: 10,
  },
  audioControls: {
    marginTop: 30,
  },
});

export default SongScreen;
